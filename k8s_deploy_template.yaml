apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: "${CI_COMMIT_MESSAGE}"
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      hostAliases:
        - ip: "172.27.11.208"
          hostnames:
            - "ipa.bigdata.local"
        - ip: "172.27.11.227"
          hostnames:
            - "replicas-ipa.bigdata.local"
        - ip: "172.27.11.186"
          hostnames:
            - "vault.sys.bigdata.local"
            - "staging-cadshouse.fpt.vn"
        - ip: "172.24.177.99"
          hostnames:
            - "dev-cadshouse.fpt.vn"
      containers:
        - name: ${APP_NAME}
          image: ${IMAGE_TAG}
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: ${POD_LIMIT_CPU}
              memory: ${POD_LIMIT_MEMORY}
            requests:
              cpu: ${POD_REQUEST_CPU}
              memory: ${POD_REQUEST_MEMORY}
          env:
            - name: VAULT_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: VAULT_ROLE_ID
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: VAULT_SECRET_ID
            - name: ENV
              value: ${CI_ENVIRONMENT_NAME}
            - name: VAULT_PATH
              value: ${APP_NAME}
            - name: VAULT_HOST
              value: ${VAULT_DOMAIN}
            - name: PROJECT
              value: ${PROJECT}

          # readinessProbe:
          #   - name: no_proxy
          #     value: "localhost,172.27.11.228,172.27.11.195,172.27.11.194"
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 9001
          #     httpHeaders:
          #     - name: healthCheck
          #       value: nLFlPlhB3S
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 9001
          #     httpHeaders:
          #     - name: healthCheck
          #       value: nLFlPlhB3S
          #   initialDelaySeconds: 300
          #   periodSeconds: 300
          # resources:
          #   limits:
          #     cpu: 500m
          #     memory: 1Gi
          #   requests:
          #     cpu: 300m
          #     memory: 800Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 15"]
                
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: ${APP_NAME}
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m"
    nginx.org/client-max-body-size: "1024m"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: ${APP_NAME}
spec:
  rules:
    - host: ${HOST_APP}
      http:
        paths:
          - backend:
              serviceName: ${APP_NAME}
              servicePort: 80
            path: /${APP_NAME}/v1(/|$)(.*)
